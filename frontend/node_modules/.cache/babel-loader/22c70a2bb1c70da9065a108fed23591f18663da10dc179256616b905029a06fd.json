{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saini\\\\Desktop\\\\project\\\\frontend\\\\src\\\\pages\\\\bookshelf\\\\bookshelf.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './bookshelf.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genres = [{\n  name: 'Fiction',\n  color: '#3E2723',\n  urdu: 'افسانہ'\n}, {\n  name: 'Mystery',\n  color: '#4B2E2E',\n  urdu: 'پراسرار'\n}, {\n  name: 'Sci-Fi',\n  color: '#D8C3A5',\n  urdu: 'سائنس فکشن'\n}, {\n  name: 'Romance',\n  color: '#E97451',\n  urdu: 'رومانوی'\n}, {\n  name: 'Biography',\n  color: '#3E2723',\n  urdu: 'سوانح حیات'\n}, {\n  name: 'History',\n  color: '#4B2E2E',\n  urdu: 'تاریخ'\n}, {\n  name: 'Philosophy',\n  color: '#D8C3A5',\n  urdu: 'فلسفہ'\n}, {\n  name: 'Poetry',\n  color: '#E97451',\n  urdu: 'شاعری'\n}];\nlet Books = [];\nconst Ilmkosh = () => {\n  _s();\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [hoveredBook, setHoveredBook] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (selectedGenre) {\n      const fetchBooks = async () => {\n        try {\n          navigate(`/genre/${selectedGenre}`);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n      fetchBooks();\n    }\n  }, [selectedGenre, navigate]);\n  const handleGenreClick = genre => {\n    setSelectedGenre(genre);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ilmkosh\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf\",\n      children: genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book\",\n        style: {\n          backgroundColor: genre.color,\n          color: '#FFD700',\n          // Gold text for a royal look\n          fontFamily: 'Georgia, serif' // A more royal, elegant font\n        },\n        onMouseEnter: () => setHoveredBook(index),\n        onMouseLeave: () => setHoveredBook(null),\n        onClick: () => handleGenreClick(genre.name),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"book-title\",\n          children: hoveredBook === index ? genre.urdu : genre.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), hoveredBook === index && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, genre.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Ilmkosh, \"i5ht4eRNZL31NO6I+w5dNvvuKF0=\", false, function () {\n  return [useNavigate];\n});\n_c = Ilmkosh;\nexport { Books };\nexport default Ilmkosh;\nvar _c;\n$RefreshReg$(_c, \"Ilmkosh\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","genres","name","color","urdu","Books","Ilmkosh","_s","selectedGenre","setSelectedGenre","hoveredBook","setHoveredBook","navigate","fetchBooks","error","console","handleGenreClick","genre","className","children","map","index","style","backgroundColor","fontFamily","onMouseEnter","onMouseLeave","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/saini/Desktop/project/frontend/src/pages/bookshelf/bookshelf.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './bookshelf.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst genres = [\r\n  { name: 'Fiction', color: '#3E2723', urdu: 'افسانہ' },\r\n  { name: 'Mystery', color: '#4B2E2E', urdu: 'پراسرار' },\r\n  { name: 'Sci-Fi', color: '#D8C3A5', urdu: 'سائنس فکشن' },\r\n  { name: 'Romance', color: '#E97451', urdu: 'رومانوی' },\r\n  { name: 'Biography', color: '#3E2723', urdu: 'سوانح حیات' },\r\n  { name: 'History', color: '#4B2E2E', urdu: 'تاریخ' },\r\n  { name: 'Philosophy', color: '#D8C3A5', urdu: 'فلسفہ' },\r\n  { name: 'Poetry', color: '#E97451', urdu: 'شاعری' },\r\n];\r\n\r\nlet Books = [];\r\n\r\nconst Ilmkosh = () => {\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n  const [hoveredBook, setHoveredBook] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (selectedGenre) {\r\n      const fetchBooks = async () => {\r\n        try {\r\n          \r\n          navigate(`/genre/${selectedGenre}`);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n      fetchBooks();\r\n    }\r\n  }, [selectedGenre, navigate]);\r\n\r\n  const handleGenreClick = (genre) => {\r\n    setSelectedGenre(genre);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ilmkosh\">\r\n      <div className=\"bookshelf\">\r\n        {genres.map((genre, index) => (\r\n          <div\r\n            key={genre.name}\r\n            className=\"book\"\r\n            style={{\r\n              backgroundColor: genre.color,\r\n              color: '#FFD700', // Gold text for a royal look\r\n              fontFamily: 'Georgia, serif', // A more royal, elegant font\r\n            }}\r\n            onMouseEnter={() => setHoveredBook(index)}\r\n            onMouseLeave={() => setHoveredBook(null)}\r\n            onClick={() => handleGenreClick(genre.name)}\r\n          >\r\n            <span className=\"book-title\">\r\n              {hoveredBook === index ? genre.urdu : genre.name}\r\n            </span>\r\n            {hoveredBook === index && (\r\n              <div className=\"book-info\">\r\n                {/* <h3>{genre.name}</h3> */}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Books };\r\nexport default Ilmkosh;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}